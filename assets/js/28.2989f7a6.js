(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{672:function(n,s,a){"use strict";a.r(s);var t=a(5),e=Object(t.a)({},(function(){var n=this,s=n.$createElement,a=n._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[a("Boxx",{attrs:{blockStyle:n.blockStyle}}),n._v(" "),a("h2",{attrs:{id:"前言"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[n._v("#")]),n._v(" 前言")]),n._v(" "),a("ol",[a("li",[a("p",[n._v("一方面，本文档希望定制一套代码风格统一的规范，使大家开发出的代码保持风格一致，更加易于理解与维护。")])]),n._v(" "),a("li",[a("p",[n._v("另一方面，鉴于微信小程序代码转换支付宝小程序出现的样式未隔离，各种组件与页面同类名样式覆盖问题，希望能通过规范来解决这一问题。")])])]),n._v(" "),a("p",[n._v("备注：此文档仅仅是提供给大家的一套开发规范，虽然有些可以通过工具进行检查以及修复，但是还有一些是需要大家自觉遵守执行的，希望大家都能认真对待。")]),n._v(" "),a("h2",{attrs:{id:"强制执行"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#强制执行"}},[n._v("#")]),n._v(" 强制执行")]),n._v(" "),a("ol",[a("li",[n._v("禁止使用标签选择器，page 除外\n标签选择器，尤其是在顶层使用的标签选择器，选择范围过大，且在小程序组件内，会超出组件样式隔离的效果，影响到页面样式。【更何况，我们现在也都知道在支付宝小程序内根本没有组件与页面的样式隔离】")])]),n._v(" "),a("p",[n._v("TODO: 后续开发过程中，遇到有标签选择器时，尽量改为 .class 选择器，如果是像活动页那样影响范围极大，不好改动的，可以暂时不要改动。")]),n._v(" "),a("p",[n._v("但在新开文件，复制早期内容时，一定要杜绝使用标签选择器。")]),n._v(" "),a("ol",{attrs:{start:"2"}},[a("li",[n._v("禁止嵌套的 ID 选择器【最好不要使用 ID 选择器】\n从性能上来说，ID 选择器确实优于 Class 选择器，但是这部分性能提升并没有多大。")])]),n._v(" "),a("p",[n._v("除此以外，ID 选择器相比 Class 选择器并没有什么其他的高级功能，反而因为 ID 的唯一性，使其缺失了复用性。")]),n._v(" "),a("p",[n._v("而且 ID 选择器提升了一个等级的优先级，使得后续的样式覆盖变得不易处理：即使你用无限个 Class 选择器，也无法覆盖一个 ID 选择器。")]),n._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[n._v("组件必须有一个 scope\n由于支付宝小程序，页面与组件缺少样式隔离，所以我们需要手动的添加隔离方式。")])]),n._v(" "),a("p",[n._v("给每个组件的最外层元素添加一个以组件为名的 Class；")]),n._v(" "),a("p",[n._v("然后 CSS 中的样式全部嵌套在这个 Class 的选择中。")]),n._v(" "),a("p",[n._v("示例：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('\x3c!-- component.wxml --\x3e\n  <view class="component-container">\n    <view class="inner-content">...</view>\n  </view>\n  // component.wxss\n  .component-container {\n    .inner-content {\n      // ...\n    }\n  }\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[n._v("禁止驼峰命名，改为连字符连接")])]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v("  // Bad\n  .cardTitle {\n    // ...\n  }\n\n  // Good\n  .card-title {\n    // ...\n  }\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br")])]),a("ol",{attrs:{start:"5"}},[a("li",[n._v("定位的 z-index 设置不要过高\n正常的定位层级在 20 以内基本能够满足大部分情况。部分确实需要高层级的，50 以内也完全足够用了，像一些设置 999，9999，10000，等值都是无谓的拔高层级设置。")])]),n._v(" "),a("p",[n._v("如此也会导致后续定位层级步步拔高，层级之间难以维护。")]),n._v(" "),a("p",[n._v("我们之前也有过这方面的规范文档写在项目中，这里再次重申一遍，希望大家能够牢记。")]),n._v(" "),a("p",[n._v("目前我们参考 bootstrap 定义规范结合我们项目给出层级规范定义，z-index 大小按照从上往下，从左往右依次增大")]),n._v(" "),a("p",[n._v("页面一般元素\n10 以内")]),n._v(" "),a("p",[n._v("sticky 元素，悬浮元素\n11-19")]),n._v(" "),a("p",[n._v("footer （置底 fixed 元素），searchbox （置顶搜索框），sidebar（侧栏）\n21-29")]),n._v(" "),a("p",[n._v("tooltip 提示框（错误信息等）\n91-99")]),n._v(" "),a("p",[n._v("modal 弹窗（定义：只能操作弹窗中的内容）\n100 以上，虽说是 100 以上，但并不是可以无限大的，应该尽量小的偏向 100，能设置 100，就不要设置 101，这种情况。")]),n._v(" "),a("p",[n._v("如果真的因特殊原因，需要设置更高的 z-index ，需要在上一行添加备注，写明为什么要设置这么高的层级。")]),n._v(" "),a("h2",{attrs:{id:"推荐规范"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#推荐规范"}},[n._v("#")]),n._v(" 推荐规范")]),n._v(" "),a("p",[n._v("OOCSS 和 BEM\nOOCSS (全称 Object Oriented CSS, 即面向对象的 CSS)，其思想就是鼓励你把样式表看作“对象”的集合：创建可重用性、可重复性的代码段让你可以在整个网站中多次使用。")]),n._v(" "),a("h2",{attrs:{id:"参考资料"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#参考资料"}},[n._v("#")]),n._v(" 参考资料")]),n._v(" "),a("p",[n._v("Nicole Sullivan 的 OOCSS wiki\nSmashing Magazine 的 Introduction to OOCSS\nBEM (全称 Block-Element-Modifier, 即块-元素-修饰符)，这是一种用于 HTML 和 CSS 类名的命名约定。")]),n._v(" "),a("p",[n._v("BEM 最初是由 Yandex 提出的，要知道他们拥有巨大的代码库和可伸缩性，BEM 就是为此而生的，并且可以作为一套遵循 OOCSS 的参考指导规范。")]),n._v(" "),a("p",[n._v("CSS Trick 的 BEM 101\nHarry Roberts 的 introduction to BEM\nBEM 类似于模块化，首先你需要根据 HTML 的结构，将其中一些有内在联系的嵌套元素整体视为一个块(Block)，而内部的每一部分，就是这个块的一个元素(Element)。修饰符(Modifier)则是用来区分一些不同块/元素的不同状态。")]),n._v(" "),a("p",[n._v("整体的命名规范为："),a("code",[n._v("block__element--modifier")]),n._v("。")]),n._v(" "),a("p",[n._v("最外层的块为 block，内部的元素为 block__element，如果有其他的修饰样式，则添加 "),a("code",[n._v("--modifier")]),n._v(" 的后缀。")]),n._v(" "),a("p",[n._v("比如：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v('<view class="warning-modal warning-modal--opacity">\n  <view class="warning-modal__title">Warning</view>\n  <view class="warning-modal__content">You can\'t do this</view>\n  <button class="warning-modal__button warning-modal__button--primary">OK</button>\n</view>\n')])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br")])]),a("p",[n._v("以上示例中，"),a("code",[n._v("warning-modal")]),n._v(" 即是块(Block)。里面有三部分: 标题、内容与按钮，这就是元素(Element)。最后 "),a("code",[n._v("warning-modal--opacity")]),n._v(" 和 "),a("code",[n._v("warning-modal__button--primary")]),n._v(" 后面的部分即是修饰符(Modifier)，一个表示给整个 warning-modal 块加上透明度，一个表示给 warning-modal 的按钮设置为主按钮的样式。")]),n._v(" "),a("p",[n._v("如此命名的一个好处是，很容易将各个部分与块的关系表示出来，容易理解，便于维护。")]),n._v(" "),a("p",[n._v("还有一个好处是，使用 PreCSS 写样式时，通过嵌套写法也更方便。")]),n._v(" "),a("p",[n._v("比如上面的结构，使用 Less 来写样式的话，可以用如下方式：")]),n._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[n._v(".warning-modal {\n  // ...\n\n  &--opacity {\n    // ...\n  }\n\n  &__title {\n    // ...\n  }\n\n  &__content {\n    // ...\n  }\n\n  &__button {\n    // ...\n\n    &--primary {\n      // ...\n    }\n  }\n}\n")])]),n._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[n._v("1")]),a("br"),a("span",{staticClass:"line-number"},[n._v("2")]),a("br"),a("span",{staticClass:"line-number"},[n._v("3")]),a("br"),a("span",{staticClass:"line-number"},[n._v("4")]),a("br"),a("span",{staticClass:"line-number"},[n._v("5")]),a("br"),a("span",{staticClass:"line-number"},[n._v("6")]),a("br"),a("span",{staticClass:"line-number"},[n._v("7")]),a("br"),a("span",{staticClass:"line-number"},[n._v("8")]),a("br"),a("span",{staticClass:"line-number"},[n._v("9")]),a("br"),a("span",{staticClass:"line-number"},[n._v("10")]),a("br"),a("span",{staticClass:"line-number"},[n._v("11")]),a("br"),a("span",{staticClass:"line-number"},[n._v("12")]),a("br"),a("span",{staticClass:"line-number"},[n._v("13")]),a("br"),a("span",{staticClass:"line-number"},[n._v("14")]),a("br"),a("span",{staticClass:"line-number"},[n._v("15")]),a("br"),a("span",{staticClass:"line-number"},[n._v("16")]),a("br"),a("span",{staticClass:"line-number"},[n._v("17")]),a("br"),a("span",{staticClass:"line-number"},[n._v("18")]),a("br"),a("span",{staticClass:"line-number"},[n._v("19")]),a("br"),a("span",{staticClass:"line-number"},[n._v("20")]),a("br"),a("span",{staticClass:"line-number"},[n._v("21")]),a("br"),a("span",{staticClass:"line-number"},[n._v("22")]),a("br"),a("span",{staticClass:"line-number"},[n._v("23")]),a("br")])]),a("h2",{attrs:{id:"格式化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#格式化"}},[n._v("#")]),n._v(" 格式化")]),n._v(" "),a("p",[n._v("格式化部分我们基本都可以使用工具来解决，但这里我还是希望大家能看看，并养成开发时就进行格式化书写的习惯。")]),n._v(" "),a("ol",[a("li",[n._v("选择器与 { 之间留一个空格")]),n._v(" "),a("li",[n._v("结束的 } 单独占一行")]),n._v(" "),a("li",[n._v(": 与后面的属性值之间保持一个空格，:与前面的属性名之间不留空格")]),n._v(" "),a("li",[n._v("多个选择器在一起时，每个选择器单独占一行")])])],1)}),[],!1,null,null,null);s.default=e.exports}}]);